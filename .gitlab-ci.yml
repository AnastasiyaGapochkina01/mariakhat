include:
  - template.yml

variables:
  POETRY_IMAGE: registry.devops-teta.ru/materials/ci/images/poetry:1.4.1-3.11.6-bookworm
  KANIKO_IMAGE: registry.devops-teta.ru/materials/ci/images/kaniko:1.9.1
  POETRY_CACHE_DIR: .cache/poetry
  PIP_CACHE_DIR: .cache/pip
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PROJECT_PATH_SLUG
  HARBOR_USER: admin
  HARBOR_PASSWORD: admin
  HARBOR_HOST: http://84.201.176.221:80
  HARBOR_IMAGE: 84.201.176.221:80/mkhat/counter
  IMAGE_TAG: latest
  PRJ_DIR: back/counter_app/

default:
  before_script:
    - set -eu

Update Cache:
  extends: .update cache
  script:
    - cd $PRJ_DIR
    - &poetry_install poetry install --no-root --no-interaction
  rules:
    - when: always

Build Package:
  extends: .build packages
  script:
    - cd back/counter_app/
    - *poetry_install
    - mkdir -p dist
    - poetry export --without-hashes --format constraints.txt --output dist/constraints.txt
    - poetry run python -m pip wheel --isolated --requirement dist/constraints.txt --wheel-dir dist/vendor
    - poetry build --format wheel
  artifacts:
    paths:
      - dist/
  rules:
    - when: always

Run Tests:
  extends: .run test
  script:
    - cd back/counter_app/
    - poetry install --no-root --no-interaction 
    - poetry run pytest --junitxml python.junit.xml || true
  artifacts:
    paths:
      - back/counter_app/python.junit.xml
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
      when: always 
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: always 

Publish Package:
  extends: .publish package
  script:
    - b64_auth=$(printf '%s:%s' "$HARBOR_USER" "$HARBOR_PASSWORD" | base64 | tr -d '\n')
    - >-
      printf '{"auths": {"%s": {"auth": "%s"}}}' "$HARBOR_HOST" "$b64_auth"
      >/kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --cache
      --use-new-run
      --insecure
      --skip-unused-stages
      --context "$CI_PROJECT_DIR/back"
      --dockerfile "$CI_PROJECT_DIR/back/Dockerfile"
      --destination "$HARBOR_IMAGE:$IMAGE_TAG"
      --cache-repo "$HARBOR_IMAGE/cache"
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always 
    - if: '$CI_COMMIT_BRANCH == "main"'
