stages:
  - build
  - test
  - publish

variables:
  POETRY_IMAGE: ''
  KANIKO_IMAGE: ''
  POETRY_CACHE_DIR: ''
  PIP_CACHE_DIR: ''
  GIT_CLONE_PATH: ''
  HARBOR_USER: ''
  HARBOR_PASSWORD: ''
  HARBOR_HOST: ''
  HARBOR_IMAGE: ''
  IMAGE_TAG: ''
  PRJ_DIR: ''

default:
  before_script:
    - set -eu

.update cache:
  stage: .pre
  needs: []
  image: &poetry_image
    name: $POETRY_IMAGE
    entrypoint: [""]
  cache:
    - &poetry_packages
      key: poetry-packages
      paths:
        - .cache
      unprotect: true
    - &poetry_venv
      key:
        prefix: poetry-venv
        files:
          - poetry.lock
      paths:
        - .venv
      unprotect: true

.build packages:
  stage: build
  needs:
    - job: Update Cache
      artifacts: false
  image:
    name: $POETRY_IMAGE
    entrypoint: [""]
  cache:
    - <<: *poetry_packages
      policy: pull
    - <<: *poetry_venv
      policy: pull

.run test:
  stage: test
  needs:
    - job: Build Package
      artifacts: true
  image:
    name: $POETRY_IMAGE
    entrypoint: [""]

.publish package:
  stage: publish
  needs:
    - job: Build Package
      artifacts: true
    - job: Run Tests
  interruptible: false
  image:
    name: $KANIKO_IMAGE
    entrypoint: [""]
  script:
    - b64_auth=$(printf '%s:%s' "$HARBOR_USER" "$HARBOR_PASSWORD" | base64 | tr -d '\n')
    - >-
      printf '{"auths": {"%s": {"auth": "%s"}}}' "$HARBOR_HOST" "$b64_auth"
      >/kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --cache
      --use-new-run
      --insecure
      --skip-unused-stages
      --context "$CI_PROJECT_DIR/back"
      --dockerfile "$CI_PROJECT_DIR/back/Dockerfile"
      --destination "$HARBOR_IMAGE:$IMAGE_TAG"
      --cache-repo "$HARBOR_IMAGE/cache"
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always 
    - if: '$CI_COMMIT_BRANCH == "main"'
